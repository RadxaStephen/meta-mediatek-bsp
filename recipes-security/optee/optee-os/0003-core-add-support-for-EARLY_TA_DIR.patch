From d1732e7444fb41f0f0d5ef7db0027af1068dfc1e Mon Sep 17 00:00:00 2001
From: Jerome Brunet <jbrunet@baylibre.com>
Date: Mon, 14 Mar 2022 11:24:13 +0100
Subject: [PATCH] core: add support for EARLY_TA_DIR

optee-os relies on the name of the TA to be the UUID of the TA.
In build systems like yocto, it makes it difficult for optee-os
to depend and pick up early TAs. Listing the different UUIDs in
optee-os recipe does not scale.

This make it possible to pass a directory containing TAs rather
the TA list itself. All the elf in that directory will be picked
up. This is a lot easier to deal with.

Signed-off-by: Jerome Brunet <jbrunet@baylibre.com>
---
 core/sub.mk  | 8 ++++++++
 mk/config.mk | 2 +-
 2 files changed, 9 insertions(+), 1 deletion(-)

diff --git a/core/sub.mk b/core/sub.mk
index faaf21c7461f..b45754b7c5a3 100644
--- a/core/sub.mk
+++ b/core/sub.mk
@@ -31,6 +31,14 @@ depends-early-ta-$1 = $1 scripts/ts_bin_to_c.py
 recipe-early-ta-$1 = $(PYTHON3) scripts/ts_bin_to_c.py $(early-ta-compress) \
 		--ta $1 --out $(sub-dir-out)/early_ta_$$(early-ta-$1-uuid).c
 endef
+
+ifneq ($(EARLY_TA_DIR),)
+ifneq ($(EARLY_TA_PATHS),)
+$(error EARLY_TA_DIR and EARLY_TA_PATHS are exlusive)
+else
+EARLY_TA_PATHS := $(wildcard $(EARLY_TA_DIR)/*.elf)
+endif
+endif
 $(foreach f, $(EARLY_TA_PATHS), $(eval $(call process_early_ta,$(f))))
 $(foreach f, $(CFG_IN_TREE_EARLY_TAS), $(eval $(call \
 	process_early_ta,$(out-dir)/ta/$(f).stripped.elf)))
diff --git a/mk/config.mk b/mk/config.mk
index 5c89093c0ae0..6feb271db0c3 100644
--- a/mk/config.mk
+++ b/mk/config.mk
@@ -339,7 +339,7 @@ CFG_REE_FS_ALLOW_RESET ?= n
 # in-tree TAs. CFG_IN_TREE_EARLY_TAS is formatted as:
 # <name-of-ta>/<uuid>
 # for instance avb/023f8f1a-292a-432b-8fc4-de8471358067
-ifneq ($(EARLY_TA_PATHS)$(CFG_IN_TREE_EARLY_TAS),)
+ifneq ($(EARLY_TA_PATHS)$(EARLY_TA_DIR)$(CFG_IN_TREE_EARLY_TAS),)
 $(call force,CFG_EARLY_TA,y)
 else
 CFG_EARLY_TA ?= n
-- 
2.35.1

