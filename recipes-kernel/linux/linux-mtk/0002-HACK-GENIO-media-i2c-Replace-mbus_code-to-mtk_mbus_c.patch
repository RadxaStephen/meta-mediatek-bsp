From 488eaed7eb5790a54a527e4be08c65ddc683a9a6 Mon Sep 17 00:00:00 2001
From: RyanHsiao <ryan.hsiao@mediatek.com>
Date: Mon, 3 Oct 2022 19:15:10 +0800
Subject: [PATCH 2/3] HACK: GENIO: media: i2c: Replace mbus_code to
 mtk_mbus_code

hack v4l2 mbus_code to mtk_mbus_code.
camsys require mtk_mbus_code by ioctrl VIDIOC_SUBDEV_ENUM_MBUS_CODE

Change-Id: I16bc8eb6e42a4f7b44ad66096464e287f18381a7
Signed-off-by: RyanHsiao <ryan.hsiao@mediatek.com>
---
 drivers/media/i2c/imx214.c | 75 ++++++++++++++++++++++++++++++--------
 1 file changed, 59 insertions(+), 16 deletions(-)

diff --git a/drivers/media/i2c/imx214.c b/drivers/media/i2c/imx214.c
index 6d89748010c3..15491179db6c 100644
--- a/drivers/media/i2c/imx214.c
+++ b/drivers/media/i2c/imx214.c
@@ -47,6 +47,8 @@
 #define IMX214_FLIP_H_MASK			0x1
 #define IMX214_FLIP_V_MASK			0x2
 
+#define IMX214_MODE_MAX				5
+
 #define sizeof_u32(__struct_name__) (sizeof(__struct_name__) / sizeof(u32))
 #define sizeof_u16(__struct_name__) (sizeof(__struct_name__) / sizeof(u16))
 
@@ -90,6 +92,12 @@
 #define V4L2_CID_VSYNC_NOTIFY \
 	(V4L2_CID_CAMERA_CLASS_BASE + 37)
 
+/* MTK mbus_fmt_code */
+#define to_std_fmt_code(code) \
+	((code) & 0xFFFF)
+#define to_mtk_ext_fmt_code(stdcode, mode) \
+	(0x10000000 | (((mode) & 0xF) << 16) | to_std_fmt_code(stdcode))
+
 struct mtk_mbus_frame_desc_entry_csi2 {
 	u8 channel;
 	u8 data_type;
@@ -653,7 +661,34 @@ static const struct imx214_mode {
 	u32 link_freq_index; /* Link frequency needed for this resolution */
 	u32 mipi_pixel_rate;
 	u32 max_framerate;
-} imx214_modes[] = {
+} imx214_modes[IMX214_MODE_MAX] = {
+	// Preview
+	{
+		.width = 4096,
+		.height = 2304,
+		.reg_table = mode_4096x2304,
+
+		.hts = 5008,
+		.vts_def = IMX214_VTS_30FPS,
+		.vts_min = IMX214_VTS_30FPS_MIN,
+		.link_freq_index = IMX214_DEFAULT_LINK_FREQ,
+		.mipi_pixel_rate = IMX214_DEFAULT_PIXEL_RATE,
+		.max_framerate = 300,
+	},
+	// Capture
+	{
+		.width = 4096,
+		.height = 2304,
+		.reg_table = mode_4096x2304,
+
+		.hts = 5008,
+		.vts_def = IMX214_VTS_30FPS,
+		.vts_min = IMX214_VTS_30FPS_MIN,
+		.link_freq_index = IMX214_DEFAULT_LINK_FREQ,
+		.mipi_pixel_rate = IMX214_DEFAULT_PIXEL_RATE,
+		.max_framerate = 300,
+	},
+	// Video
 	{
 		.width = 4096,
 		.height = 2304,
@@ -666,10 +701,24 @@ static const struct imx214_mode {
 		.mipi_pixel_rate = IMX214_DEFAULT_PIXEL_RATE,
 		.max_framerate = 300,
 	},
+	// Highspeed Video
 	{
-		.width = 1920,
-		.height = 1080,
-		.reg_table = mode_1920x1080,
+		.width = 4096,
+		.height = 2304,
+		.reg_table = mode_4096x2304,
+
+		.hts = 5008,
+		.vts_def = IMX214_VTS_30FPS,
+		.vts_min = IMX214_VTS_30FPS_MIN,
+		.link_freq_index = IMX214_DEFAULT_LINK_FREQ,
+		.mipi_pixel_rate = IMX214_DEFAULT_PIXEL_RATE,
+		.max_framerate = 300,
+	},
+	// Slim Video
+	{
+		.width = 4096,
+		.height = 2304,
+		.reg_table = mode_4096x2304,
 
 		.hts = 5008,
 		.vts_def = IMX214_VTS_30FPS,
@@ -839,10 +888,10 @@ static int imx214_enum_mbus_code(struct v4l2_subdev *sd,
 				 struct v4l2_subdev_state *sd_state,
 				 struct v4l2_subdev_mbus_code_enum *code)
 {
-	if (code->index > 0)
+	if (code->index >= ARRAY_SIZE(imx214_modes))
 		return -EINVAL;
 
-	code->code = IMX214_MBUS_CODE;
+	code->code = to_mtk_ext_fmt_code(IMX214_MBUS_CODE, code->index);
 
 	return 0;
 }
@@ -851,7 +900,7 @@ static int imx214_enum_frame_size(struct v4l2_subdev *subdev,
 				  struct v4l2_subdev_state *sd_state,
 				  struct v4l2_subdev_frame_size_enum *fse)
 {
-	if (fse->code != IMX214_MBUS_CODE)
+	if (to_std_fmt_code(fse->code) != IMX214_MBUS_CODE)
 		return -EINVAL;
 
 	if (fse->index >= ARRAY_SIZE(imx214_modes))
@@ -1625,18 +1674,12 @@ static int imx214_enum_frame_interval(struct v4l2_subdev *subdev,
 				struct v4l2_subdev_state *sd_state,
 				struct v4l2_subdev_frame_interval_enum *fie)
 {
-	const struct imx214_mode *mode;
-
-	if (fie->index != 0)
+	if (fie->index >= ARRAY_SIZE(imx214_modes))
 		return -EINVAL;
 
-	mode = v4l2_find_nearest_size(imx214_modes,
-				ARRAY_SIZE(imx214_modes), width, height,
-				fie->width, fie->height);
-
 	fie->code = IMX214_MBUS_CODE;
-	fie->width = mode->width;
-	fie->height = mode->height;
+	fie->width = imx214_modes[fie->index].width;
+	fie->height = imx214_modes[fie->index].height;
 	fie->interval.numerator = 1;
 	fie->interval.denominator = IMX214_FPS;
 
-- 
2.18.0

