// SPDX-License-Identifier: GPL-2.0
/*
 * Copyright (c) 2021 Baylibre, SAS
 * Author: Florian Sylvestre <florian.sylvestre@baylibre.com>
 */

#include <dt-bindings/clock/mt8365-clk.h>
#include <dt-bindings/gpio/gpio.h>
#include <dt-bindings/pinctrl/mt8365-pinfunc.h>

/dts-v1/;
/plugin/;

/ {
	fragment@0 {
		target = <&pio>;
		__overlay__ {
			cam0_pins_default: cam0_pins_default {
				pins_clk_rst {
					pinmux = <MT8365_PIN_65_CMMCLK0__FUNC_CMMCLK0>,
						<MT8365_PIN_105_NCLE__FUNC_GPIO105>,
						<MT8365_PIN_106_NCEB1__FUNC_GPIO106>;
				};
			};

			cam1_pins_default: cam1_pins_default {
				pins_clk_rst {
					pinmux = <MT8365_PIN_66_CMMCLK1__FUNC_CMMCLK1>,
						 <MT8365_PIN_107_NCEB0__FUNC_GPIO107>,
						 <MT8365_PIN_108_NREB__FUNC_GPIO108>;
				};
			};
		};
	};

	fragment@1 {
		target = <&i2c2>;
		__overlay__ {
			clock-frequency = <400000>;

			camera@3d {  /* Rear camera */
				compatible = "onnn,ap1302";
				reg = <0x3d>;

				pinctrl-names = "default";
				pinctrl-0 = <&cam0_pins_default>;

				clocks = <&topckgen CLK_TOP_CAMTG_SEL>;
				assigned-clocks = <&topckgen CLK_TOP_CAMTG_SEL>;
				assigned-clock-parents = <&topckgen CLK_TOP_USB20_192M_D4>;

				reset-gpios = <&pio 106 GPIO_ACTIVE_LOW>;
				standby-gpios = <&pio 105 GPIO_ACTIVE_LOW>;

				orientation = <0>;
				rotation = <0>;

				port {
					isp1_out: endpoint {
						remote-endpoint = <&seninf_in1>;
						data-lanes = <1 2 3 4>;
					};
				};

				sensors {
					#address-cells = <1>;
					#size-cells = <0>;

					onnn,model = "onnn,ar0430";

					sensor@0 {
						reg = <0>;
					};
				};
			};
		};
	};

	fragment@2 {
		target = <&i2c3>;
		__overlay__ {
			clock-frequency = <400000>;

			camera@3d { /* Front camera */
				compatible = "onnn,ap1302";
				reg = <0x3d>;

				pinctrl-names = "default";
				pinctrl-0 = <&cam1_pins_default>;

				clocks = <&topckgen CLK_TOP_CAMTG1_SEL>;
				assigned-clocks = <&topckgen CLK_TOP_CAMTG1_SEL>;
				assigned-clock-parents = <&topckgen CLK_TOP_USB20_192M_D4>;

				reset-gpios = <&pio 108 GPIO_ACTIVE_LOW>;
				standby-gpios = <&pio 107 GPIO_ACTIVE_LOW>;

				orientation = <0>;
				rotation = <0>;

				port {
					isp2_out: endpoint {
						remote-endpoint = <&seninf_in2>;
						data-lanes = <1 2 3 4>;
					};
				};

				sensors {
					#address-cells = <1>;
					#size-cells = <0>;

					onnn,model = "onnn,ar0430";

					sensor@0 {
						reg = <0>;
					};
				};
			};
		};
	};

	fragment@3 {
		target = <&seninf>;
		__overlay__ {
			status = "okay";

			ports {
				port@0 {
					seninf_in1: endpoint {
						clock-lanes = <2>;
						data-lanes = <1 3 0 4>;
						remote-endpoint = <&isp1_out>;
					};
				};

				port@1 {
					seninf_in2: endpoint {
						clock-lanes = <2>;
						data-lanes = <1 3 0 4>;
						remote-endpoint = <&isp2_out>;
					};
				};
			};
		};
	};

	fragment@4 {
		target = <&camsv1>;
		__overlay__ {
			status = "okay";
		};
	};

	fragment@5 {
		target = <&camsv2>;
		__overlay__ {
			status = "okay";
		};
	};
};
