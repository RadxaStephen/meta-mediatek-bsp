From bab9041c4b49161704ba64b0e5d4b7824f909ddb Mon Sep 17 00:00:00 2001
From: Nicolas Dufresne <nicolas.dufresne@collabora.com>
Date: Tue, 25 Jan 2022 14:08:47 -0500
Subject: [PATCH] Port plugins to gst_video_format_info_extrapolate_stride()

This reduces code duplication and simplify addition of new
pixel formats into related plugins.

Part-of: <https://gitlab.freedesktop.org/gstreamer/gstreamer/-/merge_requests/1567>
---
 .../ext/wayland/wlshmallocator.c              | 28 ++---------------
 .../sys/kms/gstkmsallocator.c                 | 31 ++-----------------
 .../sys/v4l2codecs/gstv4l2format.c            | 30 ++----------------
 3 files changed, 7 insertions(+), 82 deletions(-)

diff --git a/ext/wayland/wlshmallocator.c b/ext/wayland/wlshmallocator.c
index 0a82a35d297..611e2fbdf0c 100644
--- a/ext/wayland/wlshmallocator.c
+++ b/ext/wayland/wlshmallocator.c
@@ -144,31 +144,6 @@ gst_is_wl_shm_memory (GstMemory * mem)
   return gst_memory_is_type (mem, GST_ALLOCATOR_WL_SHM);
 }
 
-/* Copied from gst_v4l2_object_extrapolate_stride() */
-static gint
-gst_wl_shm_extrapolate_stride (const GstVideoFormatInfo * finfo, gint plane,
-    gint stride)
-{
-  gint estride;
-
-  switch (finfo->format) {
-    case GST_VIDEO_FORMAT_NV12:
-    case GST_VIDEO_FORMAT_NV12_64Z32:
-    case GST_VIDEO_FORMAT_NV21:
-    case GST_VIDEO_FORMAT_NV16:
-    case GST_VIDEO_FORMAT_NV61:
-    case GST_VIDEO_FORMAT_NV24:
-      estride = (plane == 0 ? 1 : 2) *
-          GST_VIDEO_FORMAT_INFO_SCALE_WIDTH (finfo, plane, stride);
-      break;
-    default:
-      estride = GST_VIDEO_FORMAT_INFO_SCALE_WIDTH (finfo, plane, stride);
-      break;
-  }
-
-  return estride;
-}
-
 static gboolean
 gst_wl_shm_validate_video_info (const GstVideoInfo * vinfo)
 {
@@ -183,7 +158,8 @@ gst_wl_shm_validate_video_info (const GstVideoInfo * vinfo)
 
     /* Overwrite the video info's stride and offset using the pitch calculcated
      * by the kms driver. */
-    estride = gst_wl_shm_extrapolate_stride (vinfo->finfo, i, base_stride);
+    estride = gst_video_format_info_extrapolate_stride (vinfo->finfo, i,
+        base_stride);
 
     if (estride != GST_VIDEO_INFO_PLANE_STRIDE (vinfo, i))
       return FALSE;
diff --git a/sys/kms/gstkmsallocator.c b/sys/kms/gstkmsallocator.c
index 2ae22fcaecc..6687f3b0a30 100644
--- a/sys/kms/gstkmsallocator.c
+++ b/sys/kms/gstkmsallocator.c
@@ -138,34 +138,6 @@ gst_kms_allocator_memory_reset (GstKMSAllocator * allocator, GstKMSMemory * mem)
   mem->bo = NULL;
 }
 
-/* Copied from gst_v4l2_object_extrapolate_stride() */
-static gint
-extrapolate_stride (const GstVideoFormatInfo * finfo, gint plane, gint stride)
-{
-  gint estride;
-
-  switch (finfo->format) {
-    case GST_VIDEO_FORMAT_NV12:
-    case GST_VIDEO_FORMAT_NV12_64Z32:
-    case GST_VIDEO_FORMAT_NV21:
-    case GST_VIDEO_FORMAT_NV16:
-    case GST_VIDEO_FORMAT_NV61:
-    case GST_VIDEO_FORMAT_NV24:
-    case GST_VIDEO_FORMAT_P010_10LE:
-    case GST_VIDEO_FORMAT_P010_10BE:
-    case GST_VIDEO_FORMAT_P016_LE:
-    case GST_VIDEO_FORMAT_P016_BE:
-      estride = (plane == 0 ? 1 : 2) *
-          GST_VIDEO_FORMAT_INFO_SCALE_WIDTH (finfo, plane, stride);
-      break;
-    default:
-      estride = GST_VIDEO_FORMAT_INFO_SCALE_WIDTH (finfo, plane, stride);
-      break;
-  }
-
-  return estride;
-}
-
 static gboolean
 gst_kms_allocator_memory_create (GstKMSAllocator * allocator,
     GstKMSMemory * kmsmem, GstVideoInfo * vinfo)
@@ -207,7 +179,8 @@ gst_kms_allocator_memory_create (GstKMSAllocator * allocator,
 
     /* Overwrite the video info's stride and offset using the pitch calculcated
      * by the kms driver. */
-    pitch = extrapolate_stride (vinfo->finfo, i, arg.pitch);
+    pitch = gst_video_format_info_extrapolate_stride (vinfo->finfo, i,
+        arg.pitch);
     GST_VIDEO_INFO_PLANE_STRIDE (vinfo, i) = pitch;
     GST_VIDEO_INFO_PLANE_OFFSET (vinfo, i) = offs;
 
diff --git a/sys/v4l2codecs/gstv4l2format.c b/sys/v4l2codecs/gstv4l2format.c
index 15e57fb12fb..3a6a06f451b 100644
--- a/sys/v4l2codecs/gstv4l2format.c
+++ b/sys/v4l2codecs/gstv4l2format.c
@@ -71,31 +71,6 @@ lookup_gst_fmt (GstVideoFormat gst_fmt)
   return ret;
 }
 
-static gint
-extrapolate_stride (const GstVideoFormatInfo * finfo, gint plane, gint stride)
-{
-  gint estride;
-
-  switch (finfo->format) {
-    case GST_VIDEO_FORMAT_NV12:
-    case GST_VIDEO_FORMAT_NV12_4L4:
-    case GST_VIDEO_FORMAT_NV12_32L32:
-    case GST_VIDEO_FORMAT_NV12_64Z32:
-    case GST_VIDEO_FORMAT_NV16:
-    case GST_VIDEO_FORMAT_NV21:
-    case GST_VIDEO_FORMAT_NV24:
-    case GST_VIDEO_FORMAT_NV61:
-      estride = (plane == 0 ? 1 : 2) *
-          GST_VIDEO_FORMAT_INFO_SCALE_WIDTH (finfo, plane, stride);
-      break;
-    default:
-      estride = GST_VIDEO_FORMAT_INFO_SCALE_WIDTH (finfo, plane, stride);
-      break;
-  }
-
-  return estride;
-}
-
 static void
 set_stride (GstVideoInfo * info, gint plane, gint stride)
 {
@@ -152,10 +127,11 @@ gst_v4l2_format_to_video_info (struct v4l2_format *fmt, GstVideoInfo * out_info)
     gint stride;
 
     if (V4L2_TYPE_IS_MULTIPLANAR (fmt->type))
-      stride = extrapolate_stride (out_info->finfo, plane,
+      stride = gst_video_format_info_extrapolate_stride (out_info->finfo, plane,
           pix_mp->plane_fmt[0].bytesperline);
     else
-      stride = extrapolate_stride (out_info->finfo, plane, pix->bytesperline);
+      stride = gst_video_format_info_extrapolate_stride (out_info->finfo, plane,
+          pix->bytesperline);
 
     set_stride (out_info, plane, stride);
     out_info->offset[plane] = offset;
-- 
GitLab

